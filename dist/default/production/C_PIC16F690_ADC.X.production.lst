

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Tue Aug 13 04:06:16 2019

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	16F690
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	dabs	1,0x7E,2
     9  0000                     
    10                           ; Version 1.43
    11                           ; Generated 25/07/2017 GMT
    12                           ; 
    13                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    14                           ; All rights reserved.
    15                           ; 
    16                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    17                           ; 
    18                           ; Redistribution and use in source and binary forms, with or without modification, are
    19                           ; permitted provided that the following conditions are met:
    20                           ; 
    21                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    22                           ;        conditions and the following disclaimer.
    23                           ; 
    24                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    25                           ;        of conditions and the following disclaimer in the documentation and/or other
    26                           ;        materials provided with the distribution.
    27                           ; 
    28                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    29                           ;        software without specific prior written permission.
    30                           ; 
    31                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    32                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    33                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    34                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    35                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    36                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    37                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    38                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    39                           ; 
    40                           ; 
    41                           ; Code-generator required, PIC16F690 Definitions
    42                           ; 
    43                           ; SFR Addresses
    44  0000                     	;# 
    45  0001                     	;# 
    46  0002                     	;# 
    47  0003                     	;# 
    48  0004                     	;# 
    49  0005                     	;# 
    50  0006                     	;# 
    51  0007                     	;# 
    52  000A                     	;# 
    53  000B                     	;# 
    54  000C                     	;# 
    55  000D                     	;# 
    56  000E                     	;# 
    57  000E                     	;# 
    58  000F                     	;# 
    59  0010                     	;# 
    60  0011                     	;# 
    61  0012                     	;# 
    62  0013                     	;# 
    63  0014                     	;# 
    64  0015                     	;# 
    65  0015                     	;# 
    66  0016                     	;# 
    67  0017                     	;# 
    68  0018                     	;# 
    69  0019                     	;# 
    70  001A                     	;# 
    71  001C                     	;# 
    72  001D                     	;# 
    73  001E                     	;# 
    74  001F                     	;# 
    75  0081                     	;# 
    76  0085                     	;# 
    77  0086                     	;# 
    78  0087                     	;# 
    79  008C                     	;# 
    80  008D                     	;# 
    81  008E                     	;# 
    82  008F                     	;# 
    83  0090                     	;# 
    84  0092                     	;# 
    85  0093                     	;# 
    86  0093                     	;# 
    87  0093                     	;# 
    88  0094                     	;# 
    89  0095                     	;# 
    90  0095                     	;# 
    91  0096                     	;# 
    92  0096                     	;# 
    93  0097                     	;# 
    94  0098                     	;# 
    95  0099                     	;# 
    96  009A                     	;# 
    97  009B                     	;# 
    98  009E                     	;# 
    99  009F                     	;# 
   100  010C                     	;# 
   101  010C                     	;# 
   102  010D                     	;# 
   103  010E                     	;# 
   104  010F                     	;# 
   105  0115                     	;# 
   106  0116                     	;# 
   107  0118                     	;# 
   108  0119                     	;# 
   109  011A                     	;# 
   110  011B                     	;# 
   111  011E                     	;# 
   112  011F                     	;# 
   113  018C                     	;# 
   114  018D                     	;# 
   115  019D                     	;# 
   116  019E                     	;# 
   117  001E                     _ADRESH	set	30
   118  0006                     _PORTBbits	set	6
   119  001F                     _ADCON0bits	set	31
   120  009E                     _ADRESL	set	158
   121  009F                     _ADCON1bits	set	159
   122  0086                     _TRISBbits	set	134
   123  0087                     _TRISC	set	135
   124  0086                     _TRISB	set	134
   125  0085                     _TRISA	set	133
   126  011F                     _ANSELH	set	287
   127  011E                     _ANSEL	set	286
   128                           
   129                           ; #config settings
   130  0000                     
   131                           	psect	cinit
   132  07FB                     start_initialization:	
   133  07FB                     __initialization:	
   134                           
   135                           ; Clear objects allocated to COMMON
   136  07FB  01F0               	clrf	__pbssCOMMON& (0+127)
   137  07FC  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   138  07FD                     end_of_initialization:	
   139                           ;End of C runtime variable initialization code
   140                           
   141  07FD                     __end_of__initialization:	
   142  07FD  0183               	clrf	3
   143  07FE  118A  2F4C         	ljmp	_main	;jump to C main() function
   144                           
   145                           	psect	bssCOMMON
   146  0070                     __pbssCOMMON:	
   147  0070                     _result:	
   148  0070                     	ds	2
   149                           
   150                           	psect	cstackCOMMON
   151  0000                     __pcstackCOMMON:	
   152  0000                     ?_main:	
   153  0000                     ??_main:	
   154                           ; 1 bytes @ 0x0
   155                           
   156                           
   157                           	psect	maintext
   158  074C                     __pmaintext:	
   159                           ; 1 bytes @ 0x0
   160 ;;
   161 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   162 ;;
   163 ;; *************** function _main *****************
   164 ;; Defined at:
   165 ;;		line 22 in file "newmain.c"
   166 ;; Parameters:    Size  Location     Type
   167 ;;		None
   168 ;; Auto vars:     Size  Location     Type
   169 ;;		None
   170 ;; Return value:  Size  Location     Type
   171 ;;                  1    wreg      void 
   172 ;; Registers used:
   173 ;;		wreg, status,2, status,0, btemp+1
   174 ;; Tracked objects:
   175 ;;		On entry : B00/0
   176 ;;		On exit  : 0/0
   177 ;;		Unchanged: 0/0
   178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   179 ;;      Params:         0       0       0       0
   180 ;;      Locals:         0       0       0       0
   181 ;;      Temps:          0       0       0       0
   182 ;;      Totals:         0       0       0       0
   183 ;;Total ram usage:        0 bytes
   184 ;; This function calls:
   185 ;;		Nothing
   186 ;; This function is called by:
   187 ;;		Startup code after reset
   188 ;; This function uses a non-reentrant model
   189 ;;
   190                           
   191                           
   192                           ;psect for function _main
   193  074C                     _main:	
   194                           
   195                           ;newmain.c: 25: ANSEL = 0b00000100;
   196                           
   197                           ;incstack = 0
   198                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1]
   199  074C  3004               	movlw	4
   200  074D  1283               	bcf	3,5	;RP0=0, select bank2
   201  074E  1703               	bsf	3,6	;RP1=1, select bank2
   202  074F  009E               	movwf	30	;volatile
   203                           
   204                           ;newmain.c: 26: ANSELH = 0;
   205  0750  019F               	clrf	31	;volatile
   206                           
   207                           ;newmain.c: 29: TRISA = 0;
   208  0751  1683               	bsf	3,5	;RP0=1, select bank1
   209  0752  1303               	bcf	3,6	;RP1=0, select bank1
   210  0753  0185               	clrf	5	;volatile
   211                           
   212                           ;newmain.c: 30: TRISB = 0;
   213  0754  0186               	clrf	6	;volatile
   214                           
   215                           ;newmain.c: 31: TRISC = 0;
   216  0755  0187               	clrf	7	;volatile
   217                           
   218                           ;newmain.c: 33: TRISBbits.TRISB4 = 0;
   219  0756  1206               	bcf	6,4	;volatile
   220                           
   221                           ;newmain.c: 34: TRISBbits.TRISB5 = 0;
   222  0757  1286               	bcf	6,5	;volatile
   223                           
   224                           ;newmain.c: 35: TRISBbits.TRISB6 = 0;
   225  0758  1306               	bcf	6,6	;volatile
   226                           
   227                           ;newmain.c: 36: TRISBbits.TRISB7 = 0;
   228  0759  1386               	bcf	6,7	;volatile
   229                           
   230                           ;newmain.c: 39: ADCON0bits.CHS = 0b0010;
   231  075A  1283               	bcf	3,5	;RP0=0, select bank0
   232  075B  1303               	bcf	3,6	;RP1=0, select bank0
   233  075C  081F               	movf	31,w	;volatile
   234  075D  39C3               	andlw	-61
   235  075E  3808               	iorlw	8
   236  075F  009F               	movwf	31	;volatile
   237                           
   238                           ;newmain.c: 42: ADCON0bits.VCFG = 0;
   239  0760  131F               	bcf	31,6	;volatile
   240                           
   241                           ;newmain.c: 45: ADCON1bits.ADCS = 0b001;
   242  0761  1683               	bsf	3,5	;RP0=1, select bank1
   243  0762  1303               	bcf	3,6	;RP1=0, select bank1
   244  0763  081F               	movf	31,w	;volatile
   245  0764  398F               	andlw	-113
   246  0765  3810               	iorlw	16
   247  0766  009F               	movwf	31	;volatile
   248                           
   249                           ;newmain.c: 48: ADCON0bits.ADFM = 1;
   250  0767  1283               	bcf	3,5	;RP0=0, select bank0
   251  0768  1303               	bcf	3,6	;RP1=0, select bank0
   252  0769  179F               	bsf	31,7	;volatile
   253                           
   254                           ;newmain.c: 51: ADCON0bits.ADON = 1;
   255  076A  141F               	bsf	31,0	;volatile
   256  076B                     L1:	
   257                           
   258                           ;newmain.c: 54: PORTBbits.RB4 = 0; PORTBbits.RB5 = 0; PORTBbits.RB6 = 0; PORTBbits.RB7 =
      +                           0;
   259  076B  1206               	bcf	6,4	;volatile
   260  076C                     L2:	
   261  076C  1286               	bcf	6,5	;volatile
   262  076D                     L3:	
   263  076D  1306               	bcf	6,6	;volatile
   264  076E                     L4:	
   265  076E  1386               	bcf	6,7	;volatile
   266  076F  2FDD               	goto	l543
   267  0770                     l555:	
   268                           ;newmain.c: 72: }
   269                           
   270                           ;newmain.c: 69: {
   271                           ;newmain.c: 71: PORTBbits.RB4 = 0; PORTBbits.RB5 = 0; PORTBbits.RB6 = 0; PORTBbits.RB7 =
      +                           0;
   272                           
   273                           
   274                           ;newmain.c: 73: else if ((result >= 205)&&(result < 409))
   275  0770  0871               	movf	_result+1,w
   276  0771  3A80               	xorlw	128
   277  0772  00FF               	movwf	127
   278  0773  3080               	movlw	128
   279  0774  027F               	subwf	127,w
   280  0775  1D03               	skipz
   281  0776  2F79               	goto	u45
   282  0777  30CD               	movlw	205
   283  0778  0270               	subwf	_result,w
   284  0779                     u45:	
   285  0779  1C03               	skipc
   286  077A  2F8A               	goto	l561
   287  077B  0871               	movf	_result+1,w
   288  077C  3A80               	xorlw	128
   289  077D  00FF               	movwf	127
   290  077E  3081               	movlw	129
   291  077F  027F               	subwf	127,w
   292  0780  1D03               	skipz
   293  0781  2F84               	goto	u55
   294  0782  3099               	movlw	153
   295  0783  0270               	subwf	_result,w
   296  0784                     u55:	
   297  0784  1803               	skipnc
   298  0785  2F8A               	goto	l561
   299                           
   300                           ;newmain.c: 74: {
   301                           ;newmain.c: 76: PORTBbits.RB4 = 1; PORTBbits.RB5 = 0; PORTBbits.RB6 = 0; PORTBbits.RB7 =
      +                           0;
   302  0786  1283               	bcf	3,5	;RP0=0, select bank0
   303  0787  1303               	bcf	3,6	;RP1=0, select bank0
   304  0788  1606               	bsf	6,4	;volatile
   305  0789  2F6C               	goto	L2
   306  078A                     l561:	
   307                           ;newmain.c: 77: }
   308                           
   309                           
   310                           ;newmain.c: 78: else if ((result >= 409)&&(result < 614))
   311  078A  0871               	movf	_result+1,w
   312  078B  3A80               	xorlw	128
   313  078C  00FF               	movwf	127
   314  078D  3081               	movlw	129
   315  078E  027F               	subwf	127,w
   316  078F  1D03               	skipz
   317  0790  2F93               	goto	u65
   318  0791  3099               	movlw	153
   319  0792  0270               	subwf	_result,w
   320  0793                     u65:	
   321  0793  1C03               	skipc
   322  0794  2FA5               	goto	l567
   323  0795  0871               	movf	_result+1,w
   324  0796  3A80               	xorlw	128
   325  0797  00FF               	movwf	127
   326  0798  3082               	movlw	130
   327  0799  027F               	subwf	127,w
   328  079A  1D03               	skipz
   329  079B  2F9E               	goto	u75
   330  079C  3066               	movlw	102
   331  079D  0270               	subwf	_result,w
   332  079E                     u75:	
   333  079E  1803               	skipnc
   334  079F  2FA5               	goto	l567
   335                           
   336                           ;newmain.c: 79: {
   337                           ;newmain.c: 81: PORTBbits.RB4 = 1; PORTBbits.RB5 = 1; PORTBbits.RB6 = 0; PORTBbits.RB7 =
      +                           0;
   338  07A0  1283               	bcf	3,5	;RP0=0, select bank0
   339  07A1  1303               	bcf	3,6	;RP1=0, select bank0
   340  07A2  1606               	bsf	6,4	;volatile
   341  07A3  1686               	bsf	6,5	;volatile
   342  07A4  2F6D               	goto	L3
   343  07A5                     l567:	
   344                           ;newmain.c: 82: }
   345                           
   346                           
   347                           ;newmain.c: 83: else if ((result >= 614)&&(result < 818))
   348  07A5  0871               	movf	_result+1,w
   349  07A6  3A80               	xorlw	128
   350  07A7  00FF               	movwf	127
   351  07A8  3082               	movlw	130
   352  07A9  027F               	subwf	127,w
   353  07AA  1D03               	skipz
   354  07AB  2FAE               	goto	u85
   355  07AC  3066               	movlw	102
   356  07AD  0270               	subwf	_result,w
   357  07AE                     u85:	
   358  07AE  1C03               	skipc
   359  07AF  2FC1               	goto	l573
   360  07B0  0871               	movf	_result+1,w
   361  07B1  3A80               	xorlw	128
   362  07B2  00FF               	movwf	127
   363  07B3  3083               	movlw	131
   364  07B4  027F               	subwf	127,w
   365  07B5  1D03               	skipz
   366  07B6  2FB9               	goto	u95
   367  07B7  3032               	movlw	50
   368  07B8  0270               	subwf	_result,w
   369  07B9                     u95:	
   370  07B9  1803               	skipnc
   371  07BA  2FC1               	goto	l573
   372                           
   373                           ;newmain.c: 84: {
   374                           ;newmain.c: 86: PORTBbits.RB4 = 1; PORTBbits.RB5 = 1; PORTBbits.RB6 = 1; PORTBbits.RB7 =
      +                           0;
   375  07BB  1283               	bcf	3,5	;RP0=0, select bank0
   376  07BC  1303               	bcf	3,6	;RP1=0, select bank0
   377  07BD  1606               	bsf	6,4	;volatile
   378  07BE  1686               	bsf	6,5	;volatile
   379  07BF  1706               	bsf	6,6	;volatile
   380  07C0  2F6E               	goto	L4
   381  07C1                     l573:	
   382                           ;newmain.c: 87: }
   383                           
   384                           
   385                           ;newmain.c: 88: else if ((result >= 818)&&(result <= 1023))
   386  07C1  0871               	movf	_result+1,w
   387  07C2  3A80               	xorlw	128
   388  07C3  00FF               	movwf	127
   389  07C4  3083               	movlw	131
   390  07C5  027F               	subwf	127,w
   391  07C6  1D03               	skipz
   392  07C7  2FCA               	goto	u105
   393  07C8  3032               	movlw	50
   394  07C9  0270               	subwf	_result,w
   395  07CA                     u105:	
   396  07CA  1C03               	skipc
   397  07CB  2FF8               	goto	l43
   398  07CC  0871               	movf	_result+1,w
   399  07CD  3A80               	xorlw	128
   400  07CE  00FF               	movwf	127
   401  07CF  3084               	movlw	132
   402  07D0  027F               	subwf	127,w
   403  07D1  1D03               	skipz
   404  07D2  2FD5               	goto	u115
   405  07D3  3000               	movlw	0
   406  07D4  0270               	subwf	_result,w
   407  07D5                     u115:	
   408  07D5  1803               	skipnc
   409  07D6  2FF8               	goto	l43
   410                           
   411                           ;newmain.c: 89: {
   412                           ;newmain.c: 91: PORTBbits.RB4 = 1; PORTBbits.RB5 = 1; PORTBbits.RB6 = 1; PORTBbits.RB7 =
      +                           1;
   413  07D7  1283               	bcf	3,5	;RP0=0, select bank0
   414  07D8  1303               	bcf	3,6	;RP1=0, select bank0
   415  07D9  1606               	bsf	6,4	;volatile
   416  07DA  1686               	bsf	6,5	;volatile
   417  07DB  1706               	bsf	6,6	;volatile
   418  07DC  1786               	bsf	6,7	;volatile
   419  07DD                     l543:	
   420                           ;newmain.c: 57: while(1)
   421                           
   422                           ;newmain.c: 92: }
   423                           
   424                           
   425                           ;newmain.c: 58: {
   426                           ;newmain.c: 60: _delay((unsigned long)((5)*(4000000/4000000.0)));
   427  07DD  2FDE               	nop2	;2 cycle nop
   428  07DE  2FDF               	nop2	;2 cycle nop
   429  07DF  0000               	nop
   430                           
   431                           ;newmain.c: 63: ADCON0bits.GO = 1;
   432  07E0  1283               	bcf	3,5	;RP0=0, select bank0
   433  07E1  1303               	bcf	3,6	;RP1=0, select bank0
   434  07E2  149F               	bsf	31,1	;volatile
   435  07E3                     l32:	
   436                           ;newmain.c: 64: while (ADCON0bits.GO) {};
   437                           
   438  07E3  189F               	btfsc	31,1	;volatile
   439  07E4  2FE3               	goto	l32
   440                           
   441                           ;newmain.c: 66: result = (ADRESH<<8) + ADRESL;
   442  07E5  081E               	movf	30,w	;volatile
   443  07E6  00F1               	movwf	_result+1
   444  07E7  1683               	bsf	3,5	;RP0=1, select bank1
   445  07E8  1303               	bcf	3,6	;RP1=0, select bank1
   446  07E9  081E               	movf	30,w	;volatile
   447  07EA  00F0               	movwf	_result
   448                           
   449                           ;newmain.c: 68: if ((result >= 0)&&(result < 205))
   450  07EB  1BF1               	btfsc	_result+1,7
   451  07EC  2F70               	goto	l555
   452  07ED  0871               	movf	_result+1,w
   453  07EE  3A80               	xorlw	128
   454  07EF  00FF               	movwf	127
   455  07F0  3080               	movlw	128
   456  07F1  027F               	subwf	127,w
   457  07F2  1D03               	skipz
   458  07F3  2FF6               	goto	u35
   459  07F4  30CD               	movlw	205
   460  07F5  0270               	subwf	_result,w
   461  07F6                     u35:	
   462  07F6  1803               	skipnc
   463  07F7  2F70               	goto	l555
   464  07F8                     l43:	
   465                           
   466                           ;newmain.c: 93: else
   467                           ;newmain.c: 94: {
   468                           ;newmain.c: 95: PORTBbits.RB4 = 0; PORTBbits.RB5 = 0; PORTBbits.RB6 = 0; PORTBbits.RB7 =
      +                           0;
   469  07F8  1283               	bcf	3,5	;RP0=0, select bank0
   470  07F9  1303               	bcf	3,6	;RP1=0, select bank0
   471  07FA  2F6B               	goto	L1
   472  07FB                     __end_of_main:	
   473                           ;newmain.c: 96: }
   474                           ;newmain.c: 97: }
   475                           ;newmain.c: 99: return;
   476                           
   477  007E                     btemp	set	126	;btemp
   478  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      0       2
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      0       2       1       14.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      0       0       3        0.0%
BITBANK1            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK2            50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0       2       8        0.0%
BITBANK0            50      0       0       9        0.0%
DATA                 0      0       2      10        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Tue Aug 13 04:06:16 2019

            __CFG_CP$OFF 0000                       l32 07E3                       l43 07F8  
                     u35 07F6                       u45 0779                       u55 0784  
                     u65 0793                       u75 079E                       u85 07AE  
                     u95 07B9                      l543 07DD                      l561 078A  
                    l555 0770                      l573 07C1                      l567 07A5  
                    u105 07CA                      u115 07D5             __CFG_CPD$OFF 0000  
                   _main 074C                     btemp 007E                     start 0000  
          __CFG_IESO$OFF 0000            __CFG_MCLRE$ON 0000                    ?_main 0000  
          __CFG_WDTE$OFF 0000                    _ANSEL 011E                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087           __CFG_FCMEN$OFF 0000  
         __CFG_BOREN$OFF 0000                    status 0003                    wtemp0 007E  
        __initialization 07FB             __end_of_main 07FB                   ??_main 0000  
                 _ADRESH 001E                   _ADRESL 009E                   _ANSELH 011F  
         __CFG_PWRTE$OFF 0000                   _result 0070  __end_of__initialization 07FD  
         __pcstackCOMMON 0000               __pmaintext 074C     end_of_initialization 07FD  
              _PORTBbits 0006                _TRISBbits 0086      start_initialization 07FB  
            __pbssCOMMON 0070                ___latbits 0001               _ADCON0bits 001F  
             _ADCON1bits 009F            __size_of_main 00AF        __CFG_FOSC$INTRCIO 0000  
